// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2024 Robin Jarry

package coverage

import (
	"github.com/openstack-k8s-operators/openstack-network-exporter/collectors/lib"
	"github.com/openstack-k8s-operators/openstack-network-exporter/config"
	"github.com/prometheus/client_golang/prometheus"
)

var metrics = map[string]lib.Metric{
	"afxdp_cq_empty": {
		Name:        "ovs_coverage_afxdp_cq_empty_total",
		Description: "afxdp_cq_empty coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"afxdp_cq_skip": {
		Name:        "ovs_coverage_afxdp_cq_skip_total",
		Description: "afxdp_cq_skip coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"afxdp_fq_full": {
		Name:        "ovs_coverage_afxdp_fq_full_total",
		Description: "afxdp_fq_full coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"afxdp_tx_full": {
		Name:        "ovs_coverage_afxdp_tx_full_total",
		Description: "afxdp_tx_full coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"bridge_reconfigure": {
		Name:        "ovs_coverage_bridge_reconfigure_total",
		Description: "bridge_reconfigure coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ccmap_expand": {
		Name:        "ovs_coverage_ccmap_expand_total",
		Description: "ccmap_expand coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ccmap_shrink": {
		Name:        "ovs_coverage_ccmap_shrink_total",
		Description: "ccmap_shrink coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"cmap_expand": {
		Name:        "ovs_coverage_cmap_expand_total",
		Description: "cmap_expand coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"cmap_shrink": {
		Name:        "ovs_coverage_cmap_shrink_total",
		Description: "cmap_shrink coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"connmgr_async_unsent": {
		Name:        "ovs_coverage_connmgr_async_unsent_total",
		Description: "connmgr_async_unsent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"conntrack_full": {
		Name:        "ovs_coverage_conntrack_full_total",
		Description: "conntrack_full coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"conntrack_invalid_tcp_flags": {
		Name:        "ovs_coverage_conntrack_invalid_tcp_flags_total",
		Description: "conntrack_invalid_tcp_flags coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"conntrack_l3csum_err": {
		Name:        "ovs_coverage_conntrack_l3csum_err_total",
		Description: "conntrack_l3csum_err coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"conntrack_l4csum_err": {
		Name:        "ovs_coverage_conntrack_l4csum_err_total",
		Description: "conntrack_l4csum_err coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"conntrack_lookup_natted_miss": {
		Name:        "ovs_coverage_conntrack_lookup_natted_miss_total",
		Description: "conntrack_lookup_natted_miss coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"conntrack_tcp_seq_chk_bypass": {
		Name:        "ovs_coverage_conntrack_tcp_seq_chk_bypass_total",
		Description: "conntrack_tcp_seq_chk_bypass coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"conntrack_tcp_seq_chk_failed": {
		Name:        "ovs_coverage_conntrack_tcp_seq_chk_failed_total",
		Description: "conntrack_tcp_seq_chk_failed coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_hw_miss_recover": {
		Name:        "ovs_coverage_datapath_drop_hw_miss_recover_total",
		Description: "datapath_drop_hw_miss_recover coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_invalid_bond": {
		Name:        "ovs_coverage_datapath_drop_invalid_bond_total",
		Description: "datapath_drop_invalid_bond coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_invalid_port": {
		Name:        "ovs_coverage_datapath_drop_invalid_port_total",
		Description: "datapath_drop_invalid_port coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_invalid_tnl_port": {
		Name:        "ovs_coverage_datapath_drop_invalid_tnl_port_total",
		Description: "datapath_drop_invalid_tnl_port coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_lock_error": {
		Name:        "ovs_coverage_datapath_drop_lock_error_total",
		Description: "datapath_drop_lock_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_meter": {
		Name:        "ovs_coverage_datapath_drop_meter_total",
		Description: "datapath_drop_meter coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_nsh_decap_error": {
		Name:        "ovs_coverage_datapath_drop_nsh_decap_error_total",
		Description: "datapath_drop_nsh_decap_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_recirc_error": {
		Name:        "ovs_coverage_datapath_drop_recirc_error_total",
		Description: "datapath_drop_recirc_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_rx_invalid_packet": {
		Name:        "ovs_coverage_datapath_drop_rx_invalid_packet_total",
		Description: "datapath_drop_rx_invalid_packet coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_sample_error": {
		Name:        "ovs_coverage_datapath_drop_sample_error_total",
		Description: "datapath_drop_sample_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_tunnel_pop_error": {
		Name:        "ovs_coverage_datapath_drop_tunnel_pop_error_total",
		Description: "datapath_drop_tunnel_pop_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_tunnel_push_error": {
		Name:        "ovs_coverage_datapath_drop_tunnel_push_error_total",
		Description: "datapath_drop_tunnel_push_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_tunnel_tso_recirc": {
		Name:        "ovs_coverage_datapath_drop_tunnel_tso_recirc_total",
		Description: "datapath_drop_tunnel_tso_recirc coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"datapath_drop_upcall_error": {
		Name:        "ovs_coverage_datapath_drop_upcall_error_total",
		Description: "datapath_drop_upcall_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"datapath_drop_userspace_action_error": {
		Name:        "ovs_coverage_datapath_drop_userspace_action_error_total",
		Description: "datapath_drop_userspace_action_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dpif_destroy": {
		Name:        "ovs_coverage_dpif_destroy_total",
		Description: "dpif_destroy coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_execute": {
		Name:        "ovs_coverage_dpif_execute_total",
		Description: "dpif_execute coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_execute_error": {
		Name:        "ovs_coverage_dpif_execute_error_total",
		Description: "dpif_execute_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dpif_execute_with_help": {
		Name:        "ovs_coverage_dpif_execute_with_help_total",
		Description: "dpif_execute_with_help coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_flow_del": {
		Name:        "ovs_coverage_dpif_flow_del_total",
		Description: "dpif_flow_del coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_flow_del_error": {
		Name:        "ovs_coverage_dpif_flow_del_error_total",
		Description: "dpif_flow_del_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dpif_flow_flush": {
		Name:        "ovs_coverage_dpif_flow_flush_total",
		Description: "dpif_flow_flush coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_flow_get": {
		Name:        "ovs_coverage_dpif_flow_get_total",
		Description: "dpif_flow_get coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_flow_get_error": {
		Name:        "ovs_coverage_dpif_flow_get_error_total",
		Description: "dpif_flow_get_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dpif_flow_put": {
		Name:        "ovs_coverage_dpif_flow_put_total",
		Description: "dpif_flow_put coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_flow_put_error": {
		Name:        "ovs_coverage_dpif_flow_put_error_total",
		Description: "dpif_flow_put_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dpif_meter_del": {
		Name:        "ovs_coverage_dpif_meter_del_total",
		Description: "dpif_meter_del coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_meter_get": {
		Name:        "ovs_coverage_dpif_meter_get_total",
		Description: "dpif_meter_get coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_meter_set": {
		Name:        "ovs_coverage_dpif_meter_set_total",
		Description: "dpif_meter_set coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_port_add": {
		Name:        "ovs_coverage_dpif_port_add_total",
		Description: "dpif_port_add coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_port_del": {
		Name:        "ovs_coverage_dpif_port_del_total",
		Description: "dpif_port_del coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"dpif_purge": {
		Name:        "ovs_coverage_dpif_purge_total",
		Description: "dpif_purge coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"drop_action_bridge_not_found": {
		Name:        "ovs_coverage_drop_action_bridge_not_found_total",
		Description: "drop_action_bridge_not_found coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_congestion": {
		Name:        "ovs_coverage_drop_action_congestion_total",
		Description: "drop_action_congestion coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"drop_action_forwarding_disabled": {
		Name:        "ovs_coverage_drop_action_forwarding_disabled_total",
		Description: "drop_action_forwarding_disabled coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"drop_action_invalid_tunnel_metadata": {
		Name:        "ovs_coverage_drop_action_invalid_tunnel_metadata_total",
		Description: "drop_action_invalid_tunnel_metadata coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_no_recirculation_context": {
		Name:        "ovs_coverage_drop_action_no_recirculation_context_total",
		Description: "drop_action_no_recirculation_context coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_of_pipeline": {
		Name:        "ovs_coverage_drop_action_of_pipeline_total",
		Description: "drop_action_of_pipeline coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"drop_action_recirculation_conflict": {
		Name:        "ovs_coverage_drop_action_recirculation_conflict_total",
		Description: "drop_action_recirculation_conflict coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_recursion_too_deep": {
		Name:        "ovs_coverage_drop_action_recursion_too_deep_total",
		Description: "drop_action_recursion_too_deep coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_stack_too_deep": {
		Name:        "ovs_coverage_drop_action_stack_too_deep_total",
		Description: "drop_action_stack_too_deep coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_too_many_mpls_labels": {
		Name:        "ovs_coverage_drop_action_too_many_mpls_labels_total",
		Description: "drop_action_too_many_mpls_labels coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_too_many_resubmit": {
		Name:        "ovs_coverage_drop_action_too_many_resubmit_total",
		Description: "drop_action_too_many_resubmit coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"drop_action_unsupported_packet_type": {
		Name:        "ovs_coverage_drop_action_unsupported_packet_type_total",
		Description: "drop_action_unsupported_packet_type coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dumped_duplicate_flow": {
		Name:        "ovs_coverage_dumped_duplicate_flow_total",
		Description: "dumped_duplicate_flow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dumped_inconsistent_flow": {
		Name:        "ovs_coverage_dumped_inconsistent_flow_total",
		Description: "dumped_inconsistent_flow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"dumped_new_flow": {
		Name:        "ovs_coverage_dumped_new_flow_total",
		Description: "dumped_new_flow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"flow_extract": {
		Name:        "ovs_coverage_flow_extract_total",
		Description: "flow_extract coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"handler_duplicate_upcall": {
		Name:        "ovs_coverage_handler_duplicate_upcall_total",
		Description: "handler_duplicate_upcall coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hindex_expand": {
		Name:        "ovs_coverage_hindex_expand_total",
		Description: "hindex_expand coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hindex_pathological": {
		Name:        "ovs_coverage_hindex_pathological_total",
		Description: "hindex_pathological coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"hindex_reserve": {
		Name:        "ovs_coverage_hindex_reserve_total",
		Description: "hindex_reserve coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hindex_shrink": {
		Name:        "ovs_coverage_hindex_shrink_total",
		Description: "hindex_shrink coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hmap_expand": {
		Name:        "ovs_coverage_hmap_expand_total",
		Description: "hmap_expand coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hmap_pathological": {
		Name:        "ovs_coverage_hmap_pathological_total",
		Description: "hmap_pathological coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"hmap_reserve": {
		Name:        "ovs_coverage_hmap_reserve_total",
		Description: "hmap_reserve coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"hmap_shrink": {
		Name:        "ovs_coverage_hmap_shrink_total",
		Description: "hmap_shrink coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ipf_l3csum_err": {
		Name:        "ovs_coverage_ipf_l3csum_err_total",
		Description: "ipf_l3csum_err coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"ipf_stuck_frag_list_purged": {
		Name:        "ovs_coverage_ipf_stuck_frag_list_purged_total",
		Description: "ipf_stuck_frag_list_purged coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"lockfile_error": {
		Name:        "ovs_coverage_lockfile_error_total",
		Description: "lockfile_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"lockfile_lock": {
		Name:        "ovs_coverage_lockfile_lock_total",
		Description: "lockfile_lock coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"lockfile_unlock": {
		Name:        "ovs_coverage_lockfile_unlock_total",
		Description: "lockfile_unlock coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"long_poll_interval": {
		Name:        "ovs_coverage_long_poll_interval_total",
		Description: "long_poll_interval coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"mac_learning_evicted": {
		Name:        "ovs_coverage_mac_learning_evicted_total",
		Description: "mac_learning_evicted coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mac_learning_expired": {
		Name:        "ovs_coverage_mac_learning_expired_total",
		Description: "mac_learning_expired coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mac_learning_learned": {
		Name:        "ovs_coverage_mac_learning_learned_total",
		Description: "mac_learning_learned coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mac_learning_moved": {
		Name:        "ovs_coverage_mac_learning_moved_total",
		Description: "mac_learning_moved coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mac_learning_static_none_move": {
		Name:        "ovs_coverage_mac_learning_static_none_move_total",
		Description: "mac_learning_static_none_move coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mcast_snooping_expired": {
		Name:        "ovs_coverage_mcast_snooping_expired_total",
		Description: "mcast_snooping_expired coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"mcast_snooping_learned": {
		Name:        "ovs_coverage_mcast_snooping_learned_total",
		Description: "mcast_snooping_learned coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"miniflow_extract_ipv4_pkt_len_error": {
		Name:        "ovs_coverage_miniflow_extract_ipv4_pkt_len_error_total",
		Description: "miniflow_extract_ipv4_pkt_len_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"miniflow_extract_ipv4_pkt_too_short": {
		Name:        "ovs_coverage_miniflow_extract_ipv4_pkt_too_short_total",
		Description: "miniflow_extract_ipv4_pkt_too_short coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"miniflow_extract_ipv6_pkt_len_error": {
		Name:        "ovs_coverage_miniflow_extract_ipv6_pkt_len_error_total",
		Description: "miniflow_extract_ipv6_pkt_len_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"miniflow_extract_ipv6_pkt_too_short": {
		Name:        "ovs_coverage_miniflow_extract_ipv6_pkt_too_short_total",
		Description: "miniflow_extract_ipv6_pkt_too_short coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"miniflow_malloc": {
		Name:        "ovs_coverage_miniflow_malloc_total",
		Description: "miniflow_malloc coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_add_router": {
		Name:        "ovs_coverage_netdev_add_router_total",
		Description: "netdev_add_router coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_arp_lookup": {
		Name:        "ovs_coverage_netdev_arp_lookup_total",
		Description: "netdev_arp_lookup coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_geneve_tso_drops": {
		Name:        "ovs_coverage_netdev_geneve_tso_drops_total",
		Description: "netdev_geneve_tso_drops coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"netdev_get_ethtool": {
		Name:        "ovs_coverage_netdev_get_ethtool_total",
		Description: "netdev_get_ethtool coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_get_hwaddr": {
		Name:        "ovs_coverage_netdev_get_hwaddr_total",
		Description: "netdev_get_hwaddr coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_get_ifindex": {
		Name:        "ovs_coverage_netdev_get_ifindex_total",
		Description: "netdev_get_ifindex coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_get_stats": {
		Name:        "ovs_coverage_netdev_get_stats_total",
		Description: "netdev_get_stats coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_push_header_drops": {
		Name:        "ovs_coverage_netdev_push_header_drops_total",
		Description: "netdev_push_header_drops coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"netdev_received": {
		Name:        "ovs_coverage_netdev_received_total",
		Description: "netdev_received coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_sent": {
		Name:        "ovs_coverage_netdev_sent_total",
		Description: "netdev_sent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_set_ethtool": {
		Name:        "ovs_coverage_netdev_set_ethtool_total",
		Description: "netdev_set_ethtool coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_set_hwaddr": {
		Name:        "ovs_coverage_netdev_set_hwaddr_total",
		Description: "netdev_set_hwaddr coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_set_policing": {
		Name:        "ovs_coverage_netdev_set_policing_total",
		Description: "netdev_set_policing coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_soft_seg_drops": {
		Name:        "ovs_coverage_netdev_soft_seg_drops_total",
		Description: "netdev_soft_seg_drops coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"netdev_soft_seg_good": {
		Name:        "ovs_coverage_netdev_soft_seg_good_total",
		Description: "netdev_soft_seg_good coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netdev_vxlan_tso_drops": {
		Name:        "ovs_coverage_netdev_vxlan_tso_drops_total",
		Description: "netdev_vxlan_tso_drops coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"netlink_overflow": {
		Name:        "ovs_coverage_netlink_overflow_total",
		Description: "netlink_overflow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"netlink_received": {
		Name:        "ovs_coverage_netlink_received_total",
		Description: "netlink_received coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netlink_recv_jumbo": {
		Name:        "ovs_coverage_netlink_recv_jumbo_total",
		Description: "netlink_recv_jumbo coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"netlink_sent": {
		Name:        "ovs_coverage_netlink_sent_total",
		Description: "netlink_sent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"nln_changed": {
		Name:        "ovs_coverage_nln_changed_total",
		Description: "nln_changed coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofmonitor_pause": {
		Name:        "ovs_coverage_ofmonitor_pause_total",
		Description: "ofmonitor_pause coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofmonitor_resume": {
		Name:        "ovs_coverage_ofmonitor_resume_total",
		Description: "ofmonitor_resume coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_dpif_expired": {
		Name:        "ovs_coverage_ofproto_dpif_expired_total",
		Description: "ofproto_dpif_expired coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_flush": {
		Name:        "ovs_coverage_ofproto_flush_total",
		Description: "ofproto_flush coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_packet_out": {
		Name:        "ovs_coverage_ofproto_packet_out_total",
		Description: "ofproto_packet_out coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_queue_req": {
		Name:        "ovs_coverage_ofproto_queue_req_total",
		Description: "ofproto_queue_req coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_recv_openflow": {
		Name:        "ovs_coverage_ofproto_recv_openflow_total",
		Description: "ofproto_recv_openflow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_reinit_ports": {
		Name:        "ovs_coverage_ofproto_reinit_ports_total",
		Description: "ofproto_reinit_ports coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ofproto_update_port": {
		Name:        "ovs_coverage_ofproto_update_port_total",
		Description: "ofproto_update_port coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"packet_in_overflow": {
		Name:        "ovs_coverage_packet_in_overflow_total",
		Description: "packet_in_overflow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"poll_create_node": {
		Name:        "ovs_coverage_poll_create_node_total",
		Description: "poll_create_node coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"poll_zero_timeout": {
		Name:        "ovs_coverage_poll_zero_timeout_total",
		Description: "poll_zero_timeout coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"process_start": {
		Name:        "ovs_coverage_process_start_total",
		Description: "process_start coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"pstream_open": {
		Name:        "ovs_coverage_pstream_open_total",
		Description: "pstream_open coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"raft_entry_serialize": {
		Name:        "ovs_coverage_raft_entry_serialize_total",
		Description: "raft_entry_serialize coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rconn_discarded": {
		Name:        "ovs_coverage_rconn_discarded_total",
		Description: "rconn_discarded coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"rconn_overflow": {
		Name:        "ovs_coverage_rconn_overflow_total",
		Description: "rconn_overflow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"rconn_queued": {
		Name:        "ovs_coverage_rconn_queued_total",
		Description: "rconn_queued coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rconn_sent": {
		Name:        "ovs_coverage_rconn_sent_total",
		Description: "rconn_sent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"revalidate_missed_dp_flow": {
		Name:        "ovs_coverage_revalidate_missed_dp_flow_total",
		Description: "revalidate_missed_dp_flow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"revalidate_missing_dp_flow": {
		Name:        "ovs_coverage_revalidate_missing_dp_flow_total",
		Description: "revalidate_missing_dp_flow coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"rev_bond": {
		Name:        "ovs_coverage_rev_bond_total",
		Description: "rev_bond coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_flow_table": {
		Name:        "ovs_coverage_rev_flow_table_total",
		Description: "rev_flow_table coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_mac_learning": {
		Name:        "ovs_coverage_rev_mac_learning_total",
		Description: "rev_mac_learning coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_mcast_snooping": {
		Name:        "ovs_coverage_rev_mcast_snooping_total",
		Description: "rev_mcast_snooping coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_port_toggled": {
		Name:        "ovs_coverage_rev_port_toggled_total",
		Description: "rev_port_toggled coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_reconfigure": {
		Name:        "ovs_coverage_rev_reconfigure_total",
		Description: "rev_reconfigure coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_rstp": {
		Name:        "ovs_coverage_rev_rstp_total",
		Description: "rev_rstp coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rev_stp": {
		Name:        "ovs_coverage_rev_stp_total",
		Description: "rev_stp coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"route_table_dump": {
		Name:        "ovs_coverage_route_table_dump_total",
		Description: "route_table_dump coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"rtbsd_changed": {
		Name:        "ovs_coverage_rtbsd_changed_total",
		Description: "rtbsd_changed coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"seq_change": {
		Name:        "ovs_coverage_seq_change_total",
		Description: "seq_change coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"stream_open": {
		Name:        "ovs_coverage_stream_open_total",
		Description: "stream_open coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"tc_netlink_malformed_reply": {
		Name:        "ovs_coverage_tc_netlink_malformed_reply_total",
		Description: "tc_netlink_malformed_reply coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_aborted": {
		Name:        "ovs_coverage_txn_aborted_total",
		Description: "txn_aborted coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_error": {
		Name:        "ovs_coverage_txn_error_total",
		Description: "txn_error coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_forward_cancel": {
		Name:        "ovs_coverage_txn_forward_cancel_total",
		Description: "txn_forward_cancel coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_forward_complete": {
		Name:        "ovs_coverage_txn_forward_complete_total",
		Description: "txn_forward_complete coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_forward_create": {
		Name:        "ovs_coverage_txn_forward_create_total",
		Description: "txn_forward_create coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_forward_sent": {
		Name:        "ovs_coverage_txn_forward_sent_total",
		Description: "txn_forward_sent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_incomplete": {
		Name:        "ovs_coverage_txn_incomplete_total",
		Description: "txn_incomplete coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_not_locked": {
		Name:        "ovs_coverage_txn_not_locked_total",
		Description: "txn_not_locked coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_success": {
		Name:        "ovs_coverage_txn_success_total",
		Description: "txn_success coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_try_again": {
		Name:        "ovs_coverage_txn_try_again_total",
		Description: "txn_try_again coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"txn_unchanged": {
		Name:        "ovs_coverage_txn_unchanged_total",
		Description: "txn_unchanged coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"txn_uncommitted": {
		Name:        "ovs_coverage_txn_uncommitted_total",
		Description: "txn_uncommitted coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ukey_dp_change": {
		Name:        "ovs_coverage_ukey_dp_change_total",
		Description: "ukey_dp_change coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"ukey_invalid_stat_reset": {
		Name:        "ovs_coverage_ukey_invalid_stat_reset_total",
		Description: "ukey_invalid_stat_reset coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"ukey_replace_contention": {
		Name:        "ovs_coverage_ukey_replace_contention_total",
		Description: "ukey_replace_contention coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"unixctl_received": {
		Name:        "ovs_coverage_unixctl_received_total",
		Description: "unixctl_received coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"unixctl_replied": {
		Name:        "ovs_coverage_unixctl_replied_total",
		Description: "unixctl_replied coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"upcall_flow_limit_grew": {
		Name:        "ovs_coverage_upcall_flow_limit_grew_total",
		Description: "upcall_flow_limit_grew coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"upcall_flow_limit_hit": {
		Name:        "ovs_coverage_upcall_flow_limit_hit_total",
		Description: "upcall_flow_limit_hit coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"upcall_flow_limit_kill": {
		Name:        "ovs_coverage_upcall_flow_limit_kill_total",
		Description: "upcall_flow_limit_kill coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"upcall_flow_limit_reduced": {
		Name:        "ovs_coverage_upcall_flow_limit_reduced_total",
		Description: "upcall_flow_limit_reduced coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"upcall_flow_limit_scaled": {
		Name:        "ovs_coverage_upcall_flow_limit_scaled_total",
		Description: "upcall_flow_limit_scaled coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"upcall_ukey_contention": {
		Name:        "ovs_coverage_upcall_ukey_contention_total",
		Description: "upcall_ukey_contention coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"upcall_ukey_replace": {
		Name:        "ovs_coverage_upcall_ukey_replace_total",
		Description: "upcall_ukey_replace coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"util_xalloc": {
		Name:        "ovs_coverage_util_xalloc_total",
		Description: "util_xalloc coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"vconn_open": {
		Name:        "ovs_coverage_vconn_open_total",
		Description: "vconn_open coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"vconn_received": {
		Name:        "ovs_coverage_vconn_received_total",
		Description: "vconn_received coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"vconn_sent": {
		Name:        "ovs_coverage_vconn_sent_total",
		Description: "vconn_sent coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"vhost_tx_contention": {
		Name:        "ovs_coverage_vhost_tx_contention_total",
		Description: "vhost_tx_contention coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_ERRORS,
	},
	"xlate_actions": {
		Name:        "ovs_coverage_xlate_actions_total",
		Description: "xlate_actions coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"xlate_actions_oversize": {
		Name:        "ovs_coverage_xlate_actions_oversize_total",
		Description: "xlate_actions_oversize coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
	"xlate_actions_too_many_output": {
		Name:        "ovs_coverage_xlate_actions_too_many_output_total",
		Description: "xlate_actions_too_many_output coverage counter",
		ValueType:   prometheus.CounterValue,
		Set:         config.METRICS_DEBUG,
	},
}
